{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/wordifyfa.ts"],"names":["enumerable","get","getter","value","key","bind","module","Object","prototype","hasOwnProperty","call","object","property","wordifyfa","num","level","output","ipos","length","faIndex","indexOf","toString","arIndex","parseInt","replace","toEnglishDigits","result","Math","floor","wordifyRials","wordifyRialsInTomans","window","exports"],"mappings":"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","file":"wordifyfa.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// Persian Wordifier\r\n// Version: 1.3.0\r\n// Author: Salman Arab Ameri\r\n// Publish: 2020-05-15\r\n// with use of ideas in http://www.dotnettips.info/post/626/%D8%AA%D8%A8%D8%AF%DB%8C%D9%84-%D8%B9%D8%AF%D8%AF-%D8%A8%D9%87-%D8%AD%D8%B1%D9%88%D9%81\r\n\r\nfunction wordifyfa(num:string|number, level:number=0):string {\r\n    function toEnglishDigits(num:string|number):number {\r\n        if (typeof num !== 'string')\r\n            return num;\r\n        const faDigits = '۰۱۲۳۴۵۶۷۸۹';\r\n        const arDigits = '٠١٢٣٤٥٦٧٨٩';\r\n        let output = \"\";\r\n        for (let ipos = 0; ipos < num.length; ipos++) {\r\n\r\n            let faIndex = faDigits.indexOf(num[ipos]);\r\n            if (faIndex >= 0) {\r\n                output += faIndex.toString();\r\n                continue;\r\n            }\r\n            let arIndex = arDigits.indexOf(num[ipos]);\r\n            if (arIndex >= 0) {\r\n                output += arIndex.toString();\r\n                continue;\r\n            }\r\n            output += num[ipos];\r\n        }\r\n        return parseInt(output.replace(/,/g, \"\"));\r\n    }\r\n\r\n    if (num === null) {\r\n        return \"\";\r\n    }\r\n\r\n    num = toEnglishDigits(num);\r\n    \r\n\r\n    // convert negative number to positive and get wordify value\r\n    if (num < 0) {\r\n        num = num * -1;\r\n        return \"منفی \" + wordifyfa(num, level);\r\n    }\r\n    if (num === 0) {\r\n        if (level === 0) {\r\n            return \"صفر\";\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n    let result = \"\";\r\n    const yekan = [\" یک \", \" دو \", \" سه \", \" چهار \", \" پنج \", \" شش \", \" هفت \", \" هشت \", \" نه \"],\r\n        dahgan = [\" بیست \", \" سی \", \" چهل \", \" پنجاه \", \" شصت \", \" هفتاد \", \" هشتاد \", \" نود \"],\r\n        sadgan = [\" یکصد \", \" دویست \", \" سیصد \", \" چهارصد \", \" پانصد \", \" ششصد \", \" هفتصد \", \" هشتصد \", \" نهصد \"],\r\n        dah = [\" ده \", \" یازده \", \" دوازده \", \" سیزده \", \" چهارده \", \" پانزده \", \" شانزده \", \" هفده \", \" هیجده \", \" نوزده \"];\r\n    if (level > 0) {\r\n        result += \" و \";\r\n        level -= 1;\r\n    }\r\n\r\n    if (num < 10) {\r\n        result += yekan[num - 1];\r\n    } else if (num < 20) {\r\n        result += dah[num - 10];\r\n    } else if (num < 100) {\r\n        result += dahgan[Math.floor(num / 10) - 2] + wordifyfa(num % 10, level + 1);\r\n    } else if (num < 1000) {\r\n        result += sadgan[Math.floor(num / 100) - 1] + wordifyfa(num % 100, level + 1);\r\n    } else if (num < 1000000) {\r\n        result += wordifyfa(Math.floor(num / 1000), level) + \" هزار \" + wordifyfa(num % 1000, level + 1);\r\n    } else if (num < 1000000000) {\r\n        result += wordifyfa(Math.floor(num / 1000000), level) + \" میلیون \" + wordifyfa(num % 1000000, level + 1);\r\n    } else if (num < 1000000000000) {\r\n        result += wordifyfa(Math.floor(num / 1000000000), level) + \" میلیارد \" + wordifyfa(num % 1000000000, level + 1);\r\n    } else if (num < 1000000000000000) {\r\n        result += wordifyfa(Math.floor(num / 1000000000000), level) + \" تریلیارد \" + wordifyfa(num % 1000000000000, level + 1);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction wordifyRials(num:string|number):string {\r\n    return wordifyfa(num, 0) + \" ریال\";\r\n}\r\n\r\nfunction wordifyRialsInTomans(num:string|number):string {\r\n    if(typeof num == \"string\") {\r\n        num=parseInt(num);\r\n    }\r\n    if (num >= 10 || num<=-10) {\r\n        num = Math.floor(num / 10);\r\n    } else {\r\n        num = 0;\r\n    }\r\n    return wordifyfa(num, 0) + \" تومان\";\r\n}\r\n\r\ndeclare var define: any;\r\ndeclare var module: any;\r\n\r\n(function() {\r\n    //expose it through Window\r\n    if (window) {\r\n        //exportables.forEach(exp => (window as any)[nameof(exp)] = exp);\r\n        (window as any)[\"wordifyfa\"] = wordifyfa;\r\n        (window as any)[\"wordifyRials\"] = wordifyRials;\r\n        (window as any)[\"wordifyRialsInTomans\"] = wordifyRialsInTomans;\r\n    }    \r\n    // Node: Export function\r\n    else if (typeof module !== \"undefined\" && module.exports) {\r\n        module.exports[\"wordifyfa\"] = wordifyfa;\r\n        module.exports[\"wordifyRials\"] = wordifyRials;\r\n        module.exports[\"wordifyRialsInTomans\"] = wordifyRialsInTomans;\r\n    }\r\n    // AMD/requirejs: Define the module\r\n    else if (typeof define === 'function' && define.amd) {\r\n        define(() => wordifyfa);\r\n        define(() => wordifyRials);\r\n        define(() => wordifyRialsInTomans);\r\n    }\r\n}())"],"sourceRoot":""}